524

Chapter 20

> 2

Low-Level Programming

while (buffer notfull) {
wait for inpuit ;
buf£fer[i] = *p;
if (buffer[i++] == '\n')
break ;
}

À sophisticated compiler might notice that this loop changes neither p nor *p. so il
could optimizc the program by altering it so that *p is fetched just once:

store *p in u register ;
while (buffer not full) {
wait for input ;

buffer[i] = value stored in register;
LÉ (buffer[i++] == '\n')
break ;

}

The optimized program wilt fill the buffer with many copies of the same charac-
ter—not exactly what we had in mind. Declaring that p points to volatile data
avoids this problem by telling the compiler that *p must be fetched from memory
each time it’s needed.

Q & À

What do you mean by saying that the & and | operators sometimes produce
the same results as the && and | | operators, but not always? [p. 511]
Let’s compare i & j with i && j (similar remarks apply to | and | [). As long as
i and j have the value O or 1 (in any combination), the two expressions will have
the same value. However, if à and j should have other values, the expressions may
not always match. [F à is l and j is 2, for example. then i & } has the value O (i
and j have no corresponding | bits), while i && j has the value !. If i is 3 and =
is 2, then i & j has the value 2, while i && ÿ has the value |.

Side effects are another difference. Evaluating i & j++ always increments j
as a side effect, whereas evaluating i && j++ sometimes increments j.

 

Who cares how DOS stores file dates? Isn’t DOS dead? [p. 516]

For the most part, yes. However, there are still plenty of files created years ago
whose dates are stored in the DOS format. In any event, DOS file dates are a good
example of how bit-felds are used.

Where do the terms “‘big-endian” and “little-endian” come from? [p. S20]

In Jonathan Swift's novel Gulliver’s Travels, the fictional islands of Lilliput and
Blefuscu are perpetually at odds over whether to open boiled eggs on the big end
or the little end. The choice 1s arbitrary, of course, just like the order of bytes in a
dlata item.
