PROGRAM

date.c

5.3 The switch Statement 89

Since deliberately falling through from one casc into the next is rare, il’s a
good idea to point out any deliberate omission of break:

switch (grade) ({
case 4: case 3: case 2: case 1:
num _passing++ ;
/* FALL THROUGH */
case 0: total grades++;
break ;
;

Without the comment, someone might later fix the “error” by adding an unwanted
break statement.

Although the last case in a switch statement never needs a break state-
ment, it‘s common practice to put one there anyway lo guard against a “missing
break” problem 1ï cases should later be added.

Printing a Date in Legal Form

Contracts and other legal documents are often dated in the following way:

Dated this day of . 20

Let's write a program that displays dates in this form. We'Il have the user enter the
date in month/day/year form, then we'Il display the date in “legal” form:

Enter date (mm/dd/yy) : 7/19/14
Dated this 19th day oË£ July, 2014.

We can get print£ to do most of the formatting. However, we’re left with two
problems: how to add “th” (or st” or “nd” or *rd”) to the day, and how to print the
month as a word instead of a number. Fortunately, the switch statement is ideal
for both situations: we’Il have one switch print the day suffix and another print
the month name.

/* Prints a date in legal form */
#include <stdio.h>

int main(void)

(

int month, day, year;

print£f ("Enter date (mm/dd/yy): ") ;
scanf("%d /%d /%d", &month, &day, &year) ;

print£f ("Dated this %d", day) ;
switch (day) |
case l: case 21: case 31:
printf ("st"); break;
case 2: case 22:
print£ ("nd") ; break;
