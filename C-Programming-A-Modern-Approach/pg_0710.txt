errno
printf

 

26.2 The <stdlib.h> Header: General Utilities 685

0 ;
"strtod 3-12g", strtod(argv[1], &ptr));

CHK VALID;

e€rrno

0 ;

printf ("strtol 3-121d", strtol (argv[1], &ptr, 10));
CHK VALID;

errno

0 ;

print£ ("strtoul +-12lu", strtoul (argv[1], &ptr, 10));
CHK VALID;

return 0;

If 3000000000 is the command-line argument, the output of the program
might have the following appearance:

Function

strtod
strtol
strtoul

Return Value

— = æ æ

3e+09
2147483647
2147483647

_ = = = = — - —. —

3e+09 Yes Yes
2147483647 No Yes
3000000000 Yes Yes

On many machines. the number 3000000000 1s too large to represent as a long
integer, although it’s valid as an unsigned long integer. The atoi and atol func-
tions had no way to indicate that the number represented by their argument was out
of range. In the output shown, they returned 2147483647 (the largest long integer),
but the C standard doesn’t guarantee this behavior. The strtoul function per-
lormed the conversion correctly; strtol returned 2147483647 (the standard
requires it to return the largest long inteser) and stored ERANGE In errno.
If 123.456 is the command-line argument, the output will be

Function

_ =— ——

strtod
strtol
strtoul

Return Value
123.456

123

123

Return Value Valid? String Consumed?

— — — - — — — —— —— — —

123.456 Yes Yes
123 Yes No
123 Yes No
