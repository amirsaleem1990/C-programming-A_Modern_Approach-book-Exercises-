362

Chapter 15  Writing Large Programs

line.h

-

The line.h file won't be as short as word.h. Our outline of the main loop
reveals the need for functions that perform the following operations:

Write contents of line buffer without justification
Determinc how many characters are left in line buffer
Write contents of line buffer with justification

Clear line buffer

Add word to line buffer

Woe'Il call these functions £lush line. space remaining, write line.
clear line, and add_word. Here’s what the 1ine.h hcader file will look
like:

Hifnde£f LINE H
#define LINE H

/‘k‘k******‘k************‘k****************—k**—k**********—k**—k**

* clear line: Clears the current line. *
'k***********‘k****‘k***‘k******‘k**-fc****v‘:**********'î:****:&?‘:****/

void clear line (void) ;

/******"Â'***********'ä'*******'k‘k**'k*********'À'**k****'k*****%“k’k*’ä’

* add word: Adds word to the end of the current line. #
* If this is not the first word on the line, *
* puts one space before word. *

*****—k******************i*******—k******—k**********‘k*******/

void add word(const char *word}) ;

/**'k********‘k****‘k********'À’*******'ä'************************

* space _remaining: Returns the number of characters left *

+ in the current line. *
****************%‘$*‘k'k‘k*:Æ‘k*****i<**+:**—k********—k********k*****/

int space remaining (void) ;

/‘k*******************************—k-k***—k***********k****Ÿ:*‘k**
* write line: Writes the current line with *
* jJustification. *
*******‘k*********:‘:*k****‘k‘k****—k************k*i'**7':***‘k****'k*'k/

void write line (void) ;

/*********‘k******‘k**********'k***************%‘**‘k*‘k‘k*****'ä"ä'*

* flush line: Writes the current line without *
* justification. I£ the line is empty, does *
* nothing. *

*‘À'************'.ë**+:—k*'k***'k***'À'***‘k**'k*'}\‘*******Ÿ:************/

void flush _ line (void) ;
#endif

Before we write the word.c and line.c files. we can use the functions
declared in word.h and 1ine.hto write justify. c, the main program. Writ-
ing this file 1s mostly à matter of translating our original loop design into C.
