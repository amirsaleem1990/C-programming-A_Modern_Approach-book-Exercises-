 

102

Chapter6 Loops

PROGRAM

square.c

PROGRAM

Printing a Table of Squares

Let’s write a program that prints a table of squares. The program will first prompt
the user to enter a number ». It will then print n lines of output, with each line con-
taining a number between ! and n together with its square:

This program prints a table of squares.
Enter number of entries in table: S

l 1
2 4
3 9
à 16
5 25

Let’s have the program store the desired number of squares in a variable
named n. We'11 need a loop that repeatedly prints a number i and its square, start-
ing with i equal to !. The loop will repeat as long as à is less than or equal to n.
We'1l have to make sure to add ! to i each time through the loop.

We’1l write the loop as a while statement. (Frankly, we haven’1 got much
choice, since the while statement is the only kind of loop we’ve covered so far.)
Here's the finished program:

/* Prints a table of squares using a while statement */
#include <stdio.h>

int main (void)

(

int i, n;

printf("This program prints a table of squares.\n") ;
print£f ("Enter number of entries in table: ");
scanf ("3d", &n) ;

Ll = 1;

while (i <= n) |
print£f("%10d%10d\n", i, i * i);
i++;

}

return Q0;

Note how square. c displays numbers in neatly aligned columns. The trick
is to use a conversion specification like %10d instead of just d, taking advantage
of the fact that print£ right-justifies numbers when a field width is specified.

Summing a Series of Numbers

As a second example of the while statement, let’s write a program that sums a
scries of integers entered by the user. Here’s what the user will see:
