6.2  The do Statement 103

This program sums a series of integers.
Enter integers (0 to terminate): 8 23 71 S O
The sum is: 107

 

Clearly we’ll need a loop that uses scanf to read a number and then adds the
number to a running total.

Letting n represent the number just read and sum the total of all numbers pre-
viously read, we end up with the following program:

sum.c /* Sums a series of numbers */
#Hinclude <stdio.h>
int maiîin(void)

int n, sum = O0;

print£f ("This program sums a series of integers.\n") ;
printf ("Enter integers (0 to terminate) : ");

scanf ("%d", &n) ;

while (n != 0) {
sum += n;
scanf ("$d", &n) ;
}

printf ("The sum is: %d\n", sum) ;

return 0;

}

Notice that the condition n ! = O 1s tested just after a number is read, allowing the
loop to terminate as soon as possible. Also note that there are two identical calls of
scan£, which is often hard to avoid when using while loops.

6.2

do statement

 
