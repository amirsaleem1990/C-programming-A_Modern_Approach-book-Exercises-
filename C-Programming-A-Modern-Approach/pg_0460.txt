 

17.5  Linked Lists 435

#define NAME LEN 25

struct part (
int number ;
char name [NAME _ LEN+1] ;
int on hand;
struct part *next;

Struct part *inventory = NULL; /* points to first part */

Struct part *find part (int number) ;
void insert (void) ;

void search (void) ;

void update (void) ;

void print (void) ;

/**********************************************************

* main: Prompts the user to enter an operation code, *
* then calls a function to perform the requested *
* action. Repeats until the user enters the *
* command 'q'. Prints an error message if the user *
* enters an illegal code. *
***********************************'À'**************—k*—k*****

int main (void)

{

char code;

for (;;) {
print£ ("Enter operation code: "),;
scan£(" %c", &code) ;
while (getchar() != '\n') /* skips to end oË line */

switch (code) {

case 'i': insert ();
break ;

case 's': search();
break ;

case 'u': update();
break ;

case 'p': print();
break;

case 'q': return O0;

default:  print£f("I11egal code\n") ;

}

print£ ("\n") ;

}

/********************************‘k*‘k*************'k'k********k

* find part: Looks up a part number in the inventory *
* list. Returns a pointer to the node *
* containing the part number; if the part *
* number is not found, returns NULL. *

‘k**‘k*********‘k******‘k*************‘k*****:‘:*****************

/

/
