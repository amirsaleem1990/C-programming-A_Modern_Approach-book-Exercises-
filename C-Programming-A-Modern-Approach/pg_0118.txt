Section 5.1

Exercises 93

case 25: printf ("Quarter") ;
break ;
}

If each case consists of a single action (a call of printf, in this example), the
break statement could even go on the same line as the action:

switch (coin) {
case 1: print£f ("Cent") ; break;
case 5: printf ("Nickel") ; break;
case 10: printf ("Dime") ; break;
case 25: print£f ("Quarter'"); break;

The other method 1s to put the statements under the case label, indenting the
statements to make the case label stand out:

switch (coin) (

case 1l:
print£ ("Cent") ;
break;

case 5:
print£ ("Nickel") ;
break ;

case 10:
print£f ("Dime") ;
break;

case 25:
print£ ("Quarter") ;
break ;

}

In one variation of this scheme, each case label is aligned under the word switch.

The first method 1s fine when the statements in each case are short and there
are relatively few of them. The second method is better for large switch state-
ments in which the statements in each case are complex and/or numerous.

Exercises

The following program fragments illustrate the relational and equality operators. Show the
output produced by each, assuming that i, j. and k are int variables.
(a) i = 2; j = 3;
k = 1 * ] == 6;
printf ("#d", kK);
(b) i = 5; j = 10; k =
print£("%d", k > i
(c) i = 3; j = 2; K = 1;
print£f ("%d", }
(d) i = 3; j = 4; k = 5;
print£ ("$d", i % j + i < k);
