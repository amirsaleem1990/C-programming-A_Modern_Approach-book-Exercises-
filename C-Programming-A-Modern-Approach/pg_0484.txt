 

182  Storage Classes 459

type qualifier declarator
y ç
const char month[] = "January";
A A
| |
type specifier initializer

The following declaration has both a storage class and a type qualifier. Tt also has
three type specifiers; their order isn°’t important:

storage class type specifiers
} / \ \;
extern const unsigned long int a[10];
ñ A
| |
type qualifier declarator

Function declarations, like variable declarations, may have a storage class, type
qualifiers, and type specifiers. The following declaration has a storage class and a
type specifier:

storage class declarator
J v
extern int square (int) ;
A

|
type specifier

The next four sections cover storage classes, type qualifiers, declarators. and
initializers in detail.

18.2 Storage Classes

Storage classes can be specified for variables and—to a lesser extent—functions
and parameters. We’1l concentrate on variables for now.

Recall from Section 10.3 that the term block refers to the body of a function
(the part enclosed in braces) or a compound statement, possibly containing decla-
rations. In C99, selection statements (i£ and switch) and iteration statements
(while, do, and for)—along with the “inner” statements that they control—are
EU S — considered to be blocks as well, although this is primarily a technicality.

@

Properties of Variables
Every variable in a C program has three properties:

u Sforage duration. The storage duration of a variable determines when mem-
ory 1s set aside for the variable and when that memory is released. Storage for
a variable with automatic storage duration is allocated when the surrounding
