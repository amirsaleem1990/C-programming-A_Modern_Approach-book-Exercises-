562 Chapter 22

numeric convarsion functions > 26.2

Table 22.13
Correspondence between
…Scanf Conversion
Specifiers and Numeric
Conversion Functions

/

Input/Ouiput

matches any string containing only the letters a, b. and c. while % [*abc]
matches any string that doesn*{ contain a, b. or c.

Many of the ….scanf conversion specifiers are closely related to the numeric
conversion functions in <stdlib.h>. These functions convert stings (like
"-297") to their equivalent numeric values (-297). The d specifier. for example,
looks for an optional + or - sign, followcd by à series of decimal digits; this is
exactly the same form that the strtol function requires when asked to convert a
string to a decimal number. Table 22.13 shows the correspondence between con-
version speciliers and numeric conversion functions.

 

 

Conversion
Specifier Viunneric Conversion Function

d strtol with 10 as the base
i strtol with 0 as the base
O strtoul with 8 as the base
u strtoul with !O as the base

x. X strtoul with 16 us the base

a.A,e, E,f,F.g.G  strtod

 

 

 

 

[t pays to be careful when writing calls of scan£. An invalid conversion specifica-
llon in a scan£ format string is just as bad as onc in a printf format strine;
either one causes undefined behavior.

 

C99 Changes to …scan£ Conversion Specifications

The conversion specifications for scanf and fscanf have undergone some
changes in C99, but the list isn’Las extensive as it was for the .printf functions:

« Additional length modifiers. C99 adds the hh. 11. j. z. and t length modifi-
ers. These correspond to the length modifiers in .printf conversion specifi-
cations.

# Additional conversion specifiers. C99 adds the F. a. and A conversion specifi-

ers. They're provided for symmetry with …print£: the …scanf functions
treat them the same as e, E, f, g, and G.

« Ability to read infinity and NaN. Just as the .printf functions can write
infinity and NaN, the …scan£ functions can read these values. To be read
properly, they should have the same appearance as values written by the
—print£ functions, with case being ignored. (For example, either INF or
in£ will be read as infinity.)

# Support for wide characters. The …scan£ functions are able to read multi-
byte characters, which are then converted to wide characters for storage. The
1C conversion specification is used to read a single multibyte character or a
