223  Formatited I/0 563

sequence of multibyte characters: 31s is used to read a string of multibyte
characters (a null character is added at the end). The 1 [ser] and 31 [“ser]
conversion specifications can also read a string of multibyte characters.

scanf Examples

The next three tables contain sample calls of scan£. Each call is applied to the
input characters shown to its right. Characters printed in stäkeeut are consumed
by the call. The values of the variables after the call appear to the right of the in-
put.

The examples in Table 22.14 show the effect of combining conversion specifi-
cations, white-space characters, and non-white-space characters. In three cases no
value is assigned to j, so it retains its value from before the call of scan£. The
examples in Table 22.15 show the effect of assignment suppression and specifying
à field width. The examples in Table 22.16 illustrate the more esoteric conversion
specifiers (i, [. and n).

 

 

 

 

 

 

 

 

 

 

Table 22.14 scan£ Call Input Variables
scanf Examples n = scanf("%dsd", &i, &j); 32—0, 8340 n |
(Group !) i: 12
j: unchanged
n = scan£f("%d,%d", &i, &]); 120,0340 n: |
i: 12
j: unchanged
n = scanf("%d ,%d", &i, &3); 224340 n: 2
i: 12
j: 34
n = scanf ("%d, %d", &i, &j);  2420,e340 n: l
i: 12
j: unchanged
Table 22.15 scan£ Call Input Variables
scan£ Examples n = scanf("%*tdgd", &i); — 124340 n: l
(Group 2) i: 34

 

n = SC8.I‘1f("%*S%S", str) ; ixeIadyg n: |
Ÿ
str: "Fair"

 

 

n = scanf ("%1d%2d%3d", 123450 n: 3
&i, &j, &k); i: l
j: 23
k: 45
n = scanf ("%2d%2s%2d", 1234560 n: 3
&i, str, &]); i: 12
str:"34"

 

 

j: 56

 
