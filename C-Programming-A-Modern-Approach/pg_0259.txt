234

Chapter 10  Program Organization

/* external variables */

int num in rank [NUM RANKS] ;

int num in suit [NUM SUITS] ;

bool straight, flush, four, three;
int pairs; /* can be 0, 1, or 2 */

/* prototypes */

void read _ cards (void) ;
void analyze hand (void) ;
void print result (void) ;

/**********************************************************

* main: Calls read cards, analyze hand, and print result *
* repeatedly. *
***'k**********‘k‘k******‘k**‘k*****************************‘k**/

int main(void)
(
£or (:;) {
read _cards () ;
analyze_hand () ;
print result () ;

}
}

/*******‘k************À‘**‘k****‘k*********‘k*******‘k‘k**'k*‘k*'k****

* read cards: Reads the cards into the external *
* variables num in rank and num in suit; *
* checks for bad cards and duplicate cards. *

*****************‘*****************‘*********'À'****‘k*********/

void read cards (void)

{

bool card exists [NUM RANKS] ([NUM _ SUITS] ;
char ch, rank ch, suit _ch;

int rank, suit;

bool bad card;

int cards read = 0;

for (rank = 0; rank < NUM RANKS; rank++) Ç{

num_in rank ({rank] = 0;
for (suit = 0; suit < NUM SUITS; suit++)
card_exists (rank] [suit] = false;

}

for (suit = O0; suit < NUM SUITS; suit++)
num_in suit [suit] = O0;

while (cards read < NUM CARDS) {
bad _card = false;

print£ ("Enter a card: ");

rank ch = getchar () ;
switch (rank ch) {
