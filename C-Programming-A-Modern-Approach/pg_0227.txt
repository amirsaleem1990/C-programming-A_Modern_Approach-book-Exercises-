202

Chapter9 Functions

conditlonal operator > 5.2

9.5

More complex expressions are possible. For example, it’s not unusual to see the
conditional operator used in a return expression:

return n >= 0 ? n : O;

When this statement is executed, the expression n >= 0 ? n : O is evaluated first.
The statement returns the value of n if il's not negative; otherwise, it returns 0.

If the type of the expression in a return statement doesn’t match the func-
tion’s return type, the expression will be implicitly converted to the return type. For
example, if a function is declared to return an int, but the return statement
contains a double expression, the value of the expression is converted to int.

return statements may appear in functions whose return type is void, pro-
vided that no expression is given:

return; /* return in a void function */

Putting an expression in such a return statement will get you a compile-time
error. In the following example, the return statement causes the function to
return immediately when given a negative argument:

void print int(int i)
{
if (i < O)
return;
print£("=d", i);

}

[f{ à is less than O, print_int will return without calling print£.
À return statement may appear at the end of à void function:

void print pun (void)

{

printf("To C, or not to C: that is the question.\n") ;
return; /* OK, but not needed */

}

Using return is unnecessary, though, since the function will return automatically
aîter 1ts last statement has been executed.

If à non-void function reaches the end of its body—that is, it fails to execute
a return statement—the behavior of the program is undefined if it attempts to
use the value returned by the function, Some compilers will issue a warning such
as “control reaches end of non-void function” if they detect the possibility of a
non-void function ‘’falling off” the end of its body.

Program Termination

Since main is a function, it must have a return type. Normally, the return type of
main 1s int, which 1s why the programs we’ve seen so far have defined main in
the following way:
