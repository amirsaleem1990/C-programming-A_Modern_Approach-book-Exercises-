QahÀ

/

cross-references » Praface

idiom

portability tip

Preface XXV

Frequently asked questions. Uve tried to answer questions that come up fre-
quently in my own courses, in other books, and on newsgroups related to C.

Additional discussion and clarification of tricky issues. Although readers
with experience in a variety of languages may be satisfied with a brief expla-
nation and a couple of examples, readers with less experience need more.
Side issues that don’t belong in the main flow. Some questions raise techni-
cal issues that won’t be of interest to all readers.

Material too advanced or too esoteric to interest the average reader. Ques-
tions of this nature are marked with an asterisk (*). Curious readers with a fair
bit of programming experience may wish to delve into these questions imme-
diately; others should definitely skip them on a first reading. Warning: These
questions often refer to topics covered in later chapters.

Common differences among C compilers. | discuss some frequently used (but
nonstandard) features provided by particular compilers.

Some questions in Q&À sections relate directly to specific places in the chap-

ter: these places are marked by a special icon to signal the reader that additional
information 1s available.

Other Features

In addition to Q&A sections, l’ve included a number of useful features, many of
which are marked with simple but distinctive icons (shown at left).

u Warnings alert readers to common pitfalls. C is famous for its traps; docu-
menting them all is a hopeless—if not impossible—task. l've tried to pick out
the pitfalls that are most common and/or most important.

= Cross-references provide a hypertext-like ability to locate information. Al-
though many of these are pointers to topics covered later in the book. some
point to previous topics that the reader may wish to review.

m Idioms—code patterns frequently seen in C programs—are marked for quick
reference.

u Portability tips give hints for wriüng programs that are independent of a par-
ticular machine, compliler, or operating system.

m Sidebars cover topics that aren°t strictly part of C but that every knowledge-
able C programmer should be aware of. (See “Source Code” on the next page
for an example of a sidebar.)

= Appendices provide valuable reference information.

Programs

Choosing illustrative programs isn’t an easy job. If programs are too brief and arti-
ficial, readers won’t get any sense of how the features are used in the real world. On
the other hand, 1f à program 1s foo realistic, its point can easily be lost in a forest of
