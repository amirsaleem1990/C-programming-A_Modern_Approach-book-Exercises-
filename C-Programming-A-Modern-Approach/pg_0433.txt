408 Chapter 16  Structures, Unions, and Enumerations

Section 16.2

®

2.

6.

(a) Declare structure variables named c1. c2, and c3, each having members real and
imaginary of type double.

(b) Modify the declaration in part (a) so that cL's members initially have the values 0.0 and
1.0, while c2's members are 1.0 and 0.0 initially. (c3 is not initialized.)

(c) Write statements that copy the members of c2 into c1. Can this be done in one state-
ment, or does it require two?

(d) Write statements that add the corresponding members of c1 and c2, storing the result
in C3.

(a) Show how to declare a tag named complex for a structure with t(wo members. real
and imaginary, of type double.

(b) Use the complex tag to declare variables named c1. c2, and c3.

(c) Write a function named make _ complex that stores its two arguments (both of type
double) in a complex structure, then returns the structure.

(d) Write à function named add_complex that adds the corresponding members of its
arguments (both complex structures), then returns the result (another complex structure).

Repeat Exercise 3, but this time using a rype named Complex.

Write the following functions, assuming that the date structure contains three members:
month. day. and year (all of type int).

(a) int day_of year(struct date d);
Returns the day of the ycar (an integer between | and 366) that corresponds to the date d.
(b) int compare dates(struct date d1, struct date d2) ;

Returns —! if À1 is an carlier date than d2. +1 if A1 is a later date than d2, and O if d1 and
d2 are the same.

Write thé following function, assuming that the time structure contains three members:
hours. minutes. and seconds (all of type int).

struct time split time (long total_seconds) ;

total seconds is a time represented as the number of seconds since midnight. The
function returns a structure containing the equivalent time in hours (0-23), minutes (0-59),
and seconds (0-59).

Assume that the fraction siructure contains two members: numerator and denomi -
nator (both of type int). Write functions that perform the following operations on frac-
tions:

(a) Reduce the fraction £ to lowest terms. Hinr: To reduce a fraction to lowest terms, first
compute the greatest common divisor (GCD) of the numerator and denominator. Then
divide both the numerator and denominator by the GCD.

(b) Add the fractions £1 and £2.

(c) Subtract the fraction £2 from the fraction £1.

(d) Multiply the fractions £1 and £2.

(e) Divide the fraction £1 by the fraction £2.

The fractions f, £1, and f£2 will be arguments of type struct fraction: cach function

Will return a value of type struct fraction. The fractions returned by the functions in

parts (b)-(e) should be reduced to lowest terms. Hint: You may use the funetion from part
(a) to help write the functions in parts (b)(e).
