 

25.5  The <wchar.h> Header (C99) 659

Formatted Wide-Character Input/Output Functions

int

int

int

Iænt

int

int

int

int

int

int

int
int

fwprintf (FILE * restrict stream,
const wchar t * restrict format,
fwscanf (FILE * restrict stream,
const wchar t * restrict format,
swprintf (wchar t * restrict s, size t n,
const wchar t * restrict format,
swscanf (const wchar t * restrict s,
const wchar t * restrict format,
vfwprint£f(FILE * restrict stream,
const wchar t * restrict format,
va _list arg);
vfiwscanf (FILE * restrict stream,
const wchar t * restrict format,
va_list arg);
vswprintf (wchar t * restrict s, size t n,
const wchar t * restrict format,
va_list arg) ;
vswscanf (const wchar t * restrict s,
const wchar t * restrict format,
va_list arg);
vwprintf (const wchar t * restrict format,
va_list arg);
vwscanf (const wchar t * restrict format,
va_list arg);
wprintf (const wchar t * restrict format,
wscanf (const wchar t * restrict format,

;
)z

The f'unctions in this group are wide-character versions of the formatted input/out-
put functions found in <stdio.h> and described in Section 22.3. The
<wchar .h> functions have arguments of type wchar t * instead of char *,
but their behavior is mostly the same as the <stdio.h> functions. Table 25.11
shows the correspondence between the <stdio.h> functions and their wide-
character counterparts. Unless mentioned otherwise, each function in the left col-
umn behaves the same as the function(s) to its right.

AIl functions in this group share several characteristics:

u All have a format string, which consists of wide characters.

m .….print£ functions, which return the number of characters written, now
return the count in wide characters.

m The %n conversion specifier refers to the number of wide characters written so
far (in the case of à …print£f function) or read so far (in the case of a
…scanf function).
