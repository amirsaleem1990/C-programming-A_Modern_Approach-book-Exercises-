static storage duration > 78.2

> ©

> Q

Q & À 175

ber entered by the user determines the length of a; the programmer doesn't have to
choose a fixed length, unlike in the original version of the program.

The length of a VLA doesn*t have Lo be spccified by a single variable. Arbi-
trary expressions, possibly containing operators, are also legal. For example:

int a[(3#*i+5] ;
int b[3j+k] ;

Like other arrays. VLAs can be multidimensional:
int c[m] [n] ;

The primary restriction on VLAs is that they can*t have static storage duration.
(We haven*‘t yet seen any arrays with this property.) Another restriction 1s thal a
VLA may not have an initializer.

Variable-length arrays are most often seen in functions other than main. One
big advantage of a VLA that belongs to a function £ is that it can have a different
length each time £ is called. We’Il explore this fcature in Section 9.3.

Q & À

Why do array subscripts start at 0 instead of 1? [p. 162]

Having subscripts begin at O simplifies the compiler a bit. Also, it can make array
subscripting marginally faster.

What if I want an array with subscripts that go from 1 to 10 instead of 0 to 9

Here’s a common trick: declare the array to have !! elements instead of 10. The
subscripts will go from O to 10, but you can just ignore element 0.

Is it possible to use a character as an array subscript?

Yes. because C treats characters as integers. You*I1 probably need to “scale” the
character before you use it as a subscript, though. Let's say that we want the
letter count array to keep track of a count for each letter in the alphabet. The
array will need 26 elements, so we’d declare it in the following way:

int letter count [26] ;

However, we can’t use letters to subscript 1etter _ count directly, because their
integer values don't fall between O and 25. To scale a lower-case letter to the
proper range, we can simply subtract ' a ' ; lo scale an upper-case letter, we'Il sub-
tract 'A'. For example, if ch contains a lower-case letter, we’d write

letter count [ch-'a'] = 0;

to clear the count that corresponds to ch. À minor caveat: this technique isn’t com-
pletely portable, because it assumes that letters have consecutive codes. However,
it works with most character sets, including ASCII.
