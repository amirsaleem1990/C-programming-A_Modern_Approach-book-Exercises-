292

Chapter 13  Strings

strncat function » 23.6

QaA

strcpy(stri, "abc") ;
strocpy(str2, "def") ;
strcat (stri, str2); /* str1 now contains "abcdef" */

Âs with strcpy, the value returned by strcat is normally discarded. The
following example shows how the return value might be used:

stropy(str1i, "abc”") ;
strepy(str2, "def") ;
strcat(str1I, strcat (str2, "ghi")) ;
/* strl now contains "abcdefghi"; str2 contains "defghi" */

 

The effect of the call strcat (str1, str2) is undefined if the array pointed to
by str1 isn’t long enough to accommodate the additional characters from str2.
Consider the following example:

char str1(6] = "abc";

strcat(stri, "def") ; /*** WRONG ***+/

strcat will attempt to add the characters d. e, £, and \O to the end of the string
already stored in str1. Unfortunately, str1 1s limited to six characters. causing
strcat to write past the end of the array.

 

The strncat function is a safer but slower version of strcat. Like
strnopy, it has a third argument that limits the number of characters it will copy.
Here’s what a call might look like:

strncat ((str1i, str2, sizeof(str1) - strlen(stri1) - 1);

strncat will terminate str1 with a null character. which isn’t included in the
third argument (the number of characters to be copied). In the example, the third
argument calculates the amount of space remaining in str1 (given by the expres-
sion sizeof (str1) - strlen(str1)) and then subtracts ! to ensure that
there will be room for the null character.

The strcmp (String Comparison) Function
The stromp function has the following prototype:
int streomp (const char *s1, const char *s2);

strcmp compares the strings s1 and s2, returning a value less than, equal to, or
greater than O, depending on whether s1 is less than. equal to. or greater than s2.
For example, to see 1f str1 is less than str2, we'd write

if (stromp(str1i, str2) < O) /* is str1 < str2? */
