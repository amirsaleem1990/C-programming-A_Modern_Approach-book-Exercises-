print£("Guess the secret number between 1 and %d.\n\n",

MAX NUMBER) ;

10.2  External Variables

initialize number generator () ;

do |

choose_new secret _number () ;
printf ("A new number has been chosen.\n") ;

read _guesses () ;
print£ ("Play again?
scanf (" %c",
print£("\n") ;
} while (command ==

&command)
lyl

return 0;

}

(Y/N)

" ;

‘

|| command == 'Y');

225

/********'À‘*********‘k***‘k*****‘k******k***********************

* initialize number generator: Initializes the random

*
+

number generator using
the time of day.

*
*
*

'À'**************—k*—k—k***—k—k****'k‘k****k*****—k********—k**—k******/

void initialize number generator (void)

{

srand ( (unsigned) time (NULL) ) ;

}

/*******—k******‘k*****—k**************“k*‘k*****************‘k**

* choose_new secret _numbe
*

*

r: Randomly selects a number

*

between 1 and MAX NUMBER and *

stores it in secret number.

*

*********—k******—k*****************************************/

void choose _new secret _number (void)

(
}

secret_number = rand() %

MAX NUMBER + 1;

/*‘k‘k‘k**********‘k*****‘k***'k**************‘k***%‘************‘k'k

* read guesses:

+ too high,
* correct,
* quesses a

XX AKAREKXAKERAAKAAEKAEEKKAKAKKK K

void read guesses (void)

{

int guess, num guesses =
£or (::) |
num guesses++;
printf ("Enter guess: "
scanf ("sd", &quess) ;
if (qguess == secret _nu

printf("You won in %d quesses!\n\n", num guesses) ;

return;
} else if (guess < sec

Repeatedly reads user guesses and tells
* the user whether each guess is too low,
or correct. When the guess 1s

prints the total number of
nd returns.

0 ;

) ;

mber) {

ret _number)

*
*
*x
*
*
*

/
