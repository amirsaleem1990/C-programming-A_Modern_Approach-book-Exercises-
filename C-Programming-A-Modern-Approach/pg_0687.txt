662 Chapter 25

fgetwc
getwc
getwchar
fgetws

fpuitwce
puiwc
puitwchar
fpuiws

fwide

International Features

There's another twist that affects the wide-character input functions. À call of
à function that reads a single character (fgetwc, getwc. and getwchar) may
fail because the bytes found in the input stream don*t form a valid wide character
or there aren’t enough bytes available. The result is un encoding error. which
causes the function to store EILSEQ in errno and return WEOF. The fgetws
function, which reads a string of wide characters. may also fail because of an

encoding error, in which case it returns a null pointer.

Wide-character output functions may also encounter encoding errors. Functions
that write a single character (£putwc, putwc, and putwchar) store EILSEOQ in
errno and return WEOF if an encoding error occurs. However, the fputws func-
tion, which writes a wide-character string, is different: it returns EOF (not WEOF) 1f
an encoding error occurs.

The £wide function doesn’t correspond to any C89 function. fwide is used
to determine the current orientation of a stream and, if desired, attempt to set its
orientation. The mode parameter determines the behavior of the function:

#w mode > 0. Attempts to make the stream wide-oriented if it has no orientation.
u mode <0. Attempts to make the stream byte-oriented if it has no orientation.
u mode = 0. The orientation is not changed.

Éwide doesn't change the orientation if the stream already has one.

The value returned by £fwide depends on the orientation of the stream after
the call. The return value is positive if the stream has wide orientation, negative if
it has byte orientation, and zero if it has no orientation.

General Wide-String Utilities

The <wchar .h> header provides a number of functions that perform operations
on wide strings. These are wide-character versions of functions that belong to the
<stdlib.h> and <string.h> headers.

Wide-String Numeric Conversion Functions

double wcstod(const wchar t * restrict nptr,
wchar t ** restrict endptr);
float wcstof (const wchar t * restrict nptr,
wchar t ** restrict endptr) ;
long double westold(const wchar t * restrict nptr,
wchar _ t ** restrict endptr) ;
long int wcestol (const wchar t * restrict nptr,
wchar t ** restrict endptr,
int base) ;
long long int wcestoll (const wchar t * restrict nptr,
wchar t ** restrict endptr,
int base) ;
