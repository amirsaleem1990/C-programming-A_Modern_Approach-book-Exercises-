652

Chapter 25

mblen

mbtowc

International Features

characters. We'Il now describe these functions, which belong to the <stdlib.h>
header. C997s <wchar .h> and <wctype.h> headers. which are discussed in
Sections 25.5 and 25.6, supply a number of additional multibyte and wide-character
functions.

C89's multibyte/wide-character f'unctions are divided into two groups. The
first group converts single characters from multibyte form to wide form and vice
versa. The behavior of these functions depends on the LC_CTYPE category of the
current locale. If the multibyte encoding is state-dependent, the behavior also
depends on the current conversion state. The conversion state consists of the cur-
rent shift state as well as the current position within a multibyte character. Calling
any of these functions with a null pointer as the value of its char * parameter
sets the function's internal conversion state to the initial conversion state, sienify-
ing that no multibyte character is yet in progress and that the initial shift state is
in effect. Later calls of the function cause its internal conversion state to be
updated.

The mblen function checks whether its first argument points to a series of
bytes that form a valid multibyte character. If so. the function returns the number
of bytes in the character; if nol, it returns —!. As a special case, mblen returns O if
the first argument points to a null character. The second argument limits the num-
ber of bytes that mblen will examine; typically, we’Il pass MB_ CUR MAX.

The following function, which comes from P. J. Plauger’s The Standard C
Librarv, uses mblen to determine whether a string consists of valid multibyte
characters. The function returns zero if s points to a valid string.

int mbcheck (const char *s)

(

int n;

for (mblen (NULL, 0); ; s += n)
if ((n = mblen(s, MB _ CUR MAX)) <= O)
return n;

}

Two aspects of the mbcheck function deserve special mention. First, there’s the
mysterious call mblen (NULL, O), which sets mblen's internal conversion state
to the initial conversion state (in case the multibyte encoding is state-dependent).
Second, there’s the matter of termination. Keep in mind that s points to an ordi-
nary character string, which is assumed to end with a null character. mblen will
return zero when it reaches this null character, causing mbcheck to return.
mbcheck will return sooner if mblen returns —1 because of an invalid multibyte

character.
The mbtowc function converts a multibyte character (pointed to by the sec-

ond argument) into a wide character. The first argument points to a wchar t vari-
able into which the function will store the result. The third argument limits the
number of bytes that mbtowc will examine. mbtowc returns the same value as
mblen: the number of bytes in the multibyte character if 1s valid, —1 1f it's not,
and zero 1f the second argument points to à null character.
