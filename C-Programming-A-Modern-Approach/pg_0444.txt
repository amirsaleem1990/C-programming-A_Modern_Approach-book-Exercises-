 

172  Dynamically Allocated Strings

int main(void)

{

}

char *reminders [MAX REMIND] ;
char day str[3], msg_str [MSG_LEN+1] ;
int day, i, j, num_remind = 0;

for (;;) {
if (num_remind == MAX REMIND) {
print£f("-- No space left --\n") ;
break ;

}

print£ ("Enter day and reminder: "),
scanf ("=2d", &day) ;
if (day == O)

break ;
sprint£ (day_str, "%2d", day) ;
read_line (msg_str, MSG_LEN) ;

for (i = 0O0; i < num _remind; i++)
if (stromp(day_str, reminders[i]) < 0)
break;
for (j = num remind; j > i; j--)
reminders[j] = reminders[j-1] ;

reminders[i] = malloc (2 + strlen(msg str) + 1);
Lf (reminders[i] == NULL) (

print£f("-- No space left --\n") ;

break;

}

strcpy (reminders[i], day _ str) ;
strcat (reminders [i], msg_str) ;

num_remind++;

}

print£f ("\nDay Reminder\n") ;

for (i = 0; i < num remind; i++)
print£(" %s\n"', reminders ([i]) ;
return 0;

int read_line(char str[], int n)

{

}

int ch, i = OD;

while ((ch = getchar()) != '\n')
LË (ài < n)
str[i++] = ch;

str[i] = '\0O';
return i;

 

419
