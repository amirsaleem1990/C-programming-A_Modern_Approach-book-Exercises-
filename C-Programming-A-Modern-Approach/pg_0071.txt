 

46 Chapter 3 Formatted Input/Output

Fortunately. this mistake is fairly easy to spot: print£ will display a couple of
odd-looking numbers instead of the values of i and j.

Since scanf normally skips white-space characters when looking for data
items, there’s often no need for a format string to include characters other than
conversion specifications. Incorrectly assuming that scan£ format strings should
resemble printf format strings—another common error—may cause scanf lo
bchave in unexpected ways. Let’s see what happens when the following call of
scanf 1s executed:

scanf ("*d, %d", &i, &j);

scan£ will first look for an integer in the input. which it stores in the variable i.
scan£ will then try to match a comma with the next input character. IF the next
input character is a space, not a comma, scanf will terminate without reading a
value for j.

 

A Although print£ format strings often end with \n, putting a new-line character
at the end of a scan£ format string 1s usually a bad idea. To scan£, a new-line
character in a format string ts equivalent to a space; both cause scanf to advance
to the next non-white-space character. For example, 1f the format string 1s
"5d\n", scan£ will skip white space, read an integer, then skip to the next non-
Wwhite-space character. À format string like this can cause an interactive program to

“hang” until the user enters a nonblank character.

 

PROGRAM  Adding Fractions

To 1llustrate scan£'s ability to match patterns, consider the problem of reading a
fraction entered by the user. Fractions are customarily written in the form mumera-
torldenominator. Instead of having the user enter the numerator and denominator
of a fraction as separate integers, scanf makes it possible to read the entire frac-
tion. The following program, which adds two fractions, illustrates this technique.

addfrac.c _ /* Adds two fractions */
#include <stdio.h>
int main (void)
{

int numl, denoml, num2, denom2, result _ num, result _ denom;

print£ ("Enter first fraction: ") ;
scanf ("%d/$d", &numl, &denoml) ;

printf ("Enter second fraction: ") ;
scanf ("3d/5d", &num2, &denom2) ;

result num = numl * denom2 + num2 * denoml ;
