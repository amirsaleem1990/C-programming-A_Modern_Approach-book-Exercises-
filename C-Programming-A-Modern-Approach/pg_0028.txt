1.1  Historyof C 3

original version of C, often called K&R C. Appendix C summarizes the major dif-
ferences between C89 and K&R C.

The language underwent a few changes in 1995 (described in a document
known as Amendment !). More significant changes occurred with the publication
of a new standard, ISO/TEC 9899:1999, in 1999. The language described in this
standard is commonly known as C99. The terms “ANST C” “ANSI/ISO C} and
“TSO C”—once used to describe C89—are now ambiguous, thanks to the existence
of two standards.

Because C99 isn’t yet universal, and because of the need to maintain millions
(if not billions) of lines of code written in older versions of C. l’Il use à special icon
(shown in the left margin) to mark discussions of features that were added in C99.
À compiler that doesn't recognize these features isn’t “C99-compliant.” If history
is any guide, it will be some years before all C compilers are C99-compliant, if they
ever are. Appendix B lists the major differences between C99 and C89.

C-Based Languages

C has had a huge influence on modern-day programming languages, many of
which borrow heavily from it. Of the many C-based languages, several are espe-
cially prominent:

wm C++ includes all the features of C, but adds classes and other features to sup-
port object-oriented programming.

u Java is based on C++ and therefore inherits many C features.
u C# is a more recent language derived from C++ and Java.

u Perl was originally a fairly simple scripting language; over time it has grown
and adopted many of the features of C.

Considering the popularity of thesc newer languages, it’s logical to ask
whether it’s worth the trouble to learn C. ! think it is, for several reasons. First,
learning C can give you greater insight into the features of C++, Java, C#, Perl, and
the other C-based languages. Programmers who learn one of these languages first
often fail to master basic features that were inherited from C. Second, there are a
lot of older C programs around; you may find yourself needing to read and main-
tain this code. Third, C is still widely used for developing new software, especially
in situations where memory or processing power is limited or where the simplicity
of C is desired. |

LF you haven’t already used one of the newer C-based languages, you'Il find
that this book is excellent preparation for learning these languages. It emphasizes
data abstraction, information hiding, and other principles that play a large role in
object-oriented programming. C++ includes all the features of C, so you’Il be able
to use everything you learn from this book if you later tackle C++. Many of the
features of C can be found in the other C-based languages as well.
