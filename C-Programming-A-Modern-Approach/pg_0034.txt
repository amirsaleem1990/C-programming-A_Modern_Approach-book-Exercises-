2

2.1

PROGRAM

C Fundamentals

One man's constant is another man'’s variable.

This chapter introduces several basic concepts, including preprocessing directives,
functions, variables, and statements, that we'Il need in order to write even the sim-
plest programs. Later chapters will cover these topics in much greater detail.

To start off, Section 2.1 presents a small C program and describes how to com-
pile and link it, Section 2.2 then discusses how to generalize the program, and Sec-
tion 2.3 shows how to add explanatory remarks, known as comments. Section 2.4
introduces variables, which store data that may change during the execution of a
program, and Section 2.5 shows how to use the scanf function to read data into
variables. Constants—data that won’1 change during program execution—can be
given names, as Section 2.6 shows. Finally, Section 2.7 explains C’s rules for cre-
ating names (identifiers) and Section 2.8 gives the rules for laying out a program.

Writing a Simple Program

In contrast to programs written in some languages, C programs require little “boil-
erplate”—a complete program can be as short as a few lines.

Printing a Pun

The first program in Kernighan and Ritchie’s classic The C Programmine Lan-
guage is extremely short: it does nothing but write the message hello, world.
Unlike other C authors, L won’t use this program as my first example. | will, how-
ever, uphold another C tradition: the bad pun. Here’s the pun:

To C, or not to C: that 1s the question.
