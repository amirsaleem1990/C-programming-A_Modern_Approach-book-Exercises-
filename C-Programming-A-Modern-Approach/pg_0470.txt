 

 

 

178  Restricted Pointers (C99) 445

Enter initial value: O

Enter final value: .5

Enter increment: .1

x cos (x)
0.00000 1.00000
0.10000 0.99500
0.20000 0.98007
0.30000 0.95534
0.40000 0.92106
0.. 50000 0.87758

x sin(x)
0.00000 0.00000
0.10000 0.09983
0.20000 0.19867
0.30000 0.29552
0.40000 0.38942
0.50000 0.47943

x tan(x)
0.00000 0.00000
0.10000 0.10033
0.20000 0.20271
0.30000 0.30934
0.40000 0.42279
0.50000 0.54630

17.8 Restricted Pointers (C99)

This section and the next discuss two of C99’s pointer-related features. Both are
primarily of interest to advanced C programmers; most readers will want to skip
these sections.

In C99, the keyword restrict may appear in the declaration of a pointer:

int * restrict p;

À pointer thats been declared using restrict is called a restricted pointer. The
intent is that if p points to an object that is later modified. then that object is not
accessed in any way other than through p. (Alternative ways to access the object
include having another pointer to the same object or having p point to a named
variable.) Having more than one way to access an object is often called aliasing.
Let's look at an example of the kind of behavior that restricted pointers are
supposed to discourage. Suppose that p and q have been declared as follows:

int * restrict p;
int * restrict g;
