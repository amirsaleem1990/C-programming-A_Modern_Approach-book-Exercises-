236

Chapter 10  Program Organization

}

straight = false;
Élush = false;
four = false;
three = false:;
pairs = 0;

/* check for £lush */
for (suit = 0; suit < NUM SUITS; suit++)
if (num in suit[suit] == NUM CARDS)
£flush = true;

/* check for straight */

rank = 0;

while (num in rank[rank] == 0O) rank++;

for (; rank < NUM RANKS && num in _ rank [rank] > 0; rank++)
num_consec++;

if (num consec == NUM CARDS) {
straight = true;
return;

}

/* check for 4-of-a-kind, 3-of-a-kind, and pairs */
for (rank = 0; rank < NUM RANKS; rank++) {

if (num _ in rank[rank] == 4) four = true;

if (num in rank [rank] 3) three = true;
1i£ (num in _ rank [rank] 2) pairs++;

}

/—k*-k******‘k*****‘k*****‘k*****‘k‘k‘k*—k**************************

* print_result: Prints the classification of the hand, *
* based on the values of the external *
* variables straight, flush, four, three, *
* and pairs. *

****************************‘k*******************'ﬁ:*********/

void print result (void)

{

1f (straight && flush) print£f("Straight flush") ;

else if (four) printf ("Four of a kind") ;
else if (three &&
pairs == 1) printf ("Full house") ;
else if (flush) print£f ("Flush") ;
else if (straight) printf ("Straight") ;
else 1f (three) printf ("Three of a kind") ;
else if (pairs == 2) print£ ("Two pairs") ;
else if (pairs == 1) printf ("Pair") ;
else print£ ("High card") ;

print£ ("\n\n") ;

Notice the use of the exit function in read_cards (in case ' O" of the first

switch statement). exit 1s convenient for this program because of its ability to
terminate execution from anywhere in the program.
