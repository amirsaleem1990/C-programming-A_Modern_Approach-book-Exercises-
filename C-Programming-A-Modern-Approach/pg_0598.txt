îtell

errno variable > 24.2

22.7  File Positioning 573

be calculated with respect to the beginning of the file, the current position, or the
end of the file. <stdio .h> defines three macros for this purpose:

SEEK SET = Beginning of file
SEEK _ CUR = Current file position
SEEK END — Endoffile

The second argument is a (possibly negative) byte count. To move to the beginning
of a file, for example, the seek direction would be SEEK SET and the byte count
would be zero:

Îseek(£p, OL, SEEK SET) ; /* moves to beginning of£ file */
To move to the end of a file, the seek direction would be SEEK_END:
Îseek(fp, OL, SEEK END) ; /* moves to end of file */

To move back 10 bytes, the seek direction would be SEEK_CUR and the byte count
would be —10:

fseek(fp, -10L, SEEK CUR) ; /* moves back 10 bytes */

Note that the byte count has type long int, so l’ve used OL and -10L as areu-
ments. (O and -10 would also work, of course. since arguments are converted Lo
the proper type automatically.)

Normally. fseek returns zero. lf an error occurs (the requested position
dloesn’t exist. for example), fseek returns à nonzero value.

The file-positioning functions are best used with binary streams. by the way. C
doesn’t prohibit programs from using them with text streams. but care is required
because of operatine system differences. fseek In particular is sensitive to
whether à stream 1s text or binary. For text streams, either (1) of fset (fseek's
second argument) must be zero or (2) whence (its third argument) must be
SEEK _SET and of£fset a value obtained by a previous call of ftell. (In other
words, we can only use £seek to move to the beginning or end of a text stream or
to return to a place that was visited previously.) For binary streams, fseek isn’t
required to support calls in which whence is SEEK _ END.

The ftel1l function returns the current file position as a long integer. (If an
error occurs, ftell returns -1L and stores an error code in errno.) The value
returned by ftell may be saved and later supplied to a call of £seek. making it
possible to return to a previous file position:

long file pos;
file pos = ftell (fp); /* saves current position */

Éseek(fp, file pos, SEEK SET) ; /* returns to old position */

If £p 1s a binary stream, the call fte11 (fp) returns the current file position as a
byte count. where zero represents the beginning of the file. If £p is a text stream,
however, £tell (fp) isn't necessarily a byte count. Às a result, 1t’s best not Lo
perform arithmetic on values returned by ftell. For example, il’‘s not a good
