13.2

idiom

13.2  String Variables 281

String Variables

Some programming languages provide a special string type for declaring string
variables. C takes a different tack: any one-dimensional array of characters can be
used to store a string, with the understanding that the string is terminated by à null
character. This approach is simple. but has significant difficulties. It’s sometimes
hard to tell whether an array of characters is being used as a string. lf we write our
own string-handling functions, we’ve got to be careful that they deal properly with
the null character. Also, there’s no faster way to determine the length of a string
than a character-by-character search for the null character.

Let’s say that we need a variable capable of storing a string of up to 80 charac-
ters. Since the string will need à null character at the end, we’Il declare the variable
to be an array of 81 characters:

#define STR LEN 80
char str[STR LEN+1] ;

We defined STR_LEN to be 80 rather than 81. thus emphasizing the fact that str
can store strings of no more than $0 characters. and then added | to STR_LEN in
the declaration of str. This a common practice among C programmers.

 

When declaring an array of characters that will be used to hold à string, always
make the array one character longer than the string, because of the C convention
that every string is terminated by a null character. Failing to leave room for the nutl
character may cause unpredictable results when the program is executed, since
functions in the C library assume that strings are null-terminated.

 

Declaring a character array to have length STR_LEN + | doesn’t mean that it
will always contain a string of STR _LEN characters. The length of a string
depends on the position of the terminating null character, not on the length of the
array in which the string is stored. An array of STR _LEN + | characters can hold
strings of various lengths, ranging from the empty string to strings of length
STR LEN.

Initializing a String Variable
À string variable can be initialized at the same time it’s declared:

char datel[8] = "June 14";
