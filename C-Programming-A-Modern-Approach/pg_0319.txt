294

Chapter 13  Strings

sprint£ function »22.8

remind.c

Day Reminder
5 Saturday class
5 6:00 - Dinner with Marge and Russ
7 10:30 - Dental appointment
12 Saturday class

12 Movie - "Dazed and Confused'"
24 Susan's birthday
26 Movie - "Chinatown"

The overall strategy isn’t very complicated: we’ll have the program read a
series of day-and-reminder combinations, storing them in order (sorted by day).
and then display them. To read the days, we’ll usce scanf; to read the reminders,
we'll use the read_line function of Section !3.3.

We'll store the strings in a two-dimensional array of characters, with each row
of the array containing one string. After the program reads a day and its associated
reminder, it will search the array to determine where the day belongs. using
streomp lo do comparisons. It will then use stropy to move all strings below
that point down one position. Finally, the program will copy the day into the array
and call strcat to append the reminder to the day. (The day and the reminder
have been kept separate up to this point.).

Of course, there are always a few minor complications. For example, we want
the days to be right-justified in a two-character field, so that their ones digits will
line up. There are many ways to handle the problem. l’ve chosen to have the pro-
gram use scanf£ to read the day into an integer variable, then call sprint£ to
convert the day back into string form. sprintf 1s a library function that’s similar
to print£, except that 11 writes output into a string. The call

sprintf (day _str, "%2d", day) ;

writes the value of day into day_str. Since sprint£ automatically adds a null
character when it's through writing, day_str will contain a properly null-termi-
nated string.

Another complication 1s making sure that the user doesn’t enter more than two
digits. We’Il use the following call of scan£ for this purpose:

scanf ("$2d", &day) ;

The number 2 between % and d tells scan£ to stop reading after Lwo digits, even
if the input has more digits.
With those details out of the way, here’s the program:

/* Prints a one-month reminder list */

#include <stdio.h>
finclude <string.h>

#define MAX REMIND 50 /* maximum number of reminders */
#define MSG LEN 60 /* max length of reminder message */
