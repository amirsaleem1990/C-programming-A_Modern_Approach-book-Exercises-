>.

variable-length argument lists
>26.1

 

Q & À 449

Q & À

What does the NULL macro represent? [p. 415]

NULL actually stands for 0. When we use O in a context where a pointer would be
required, C compilers treat it as a null pointer instead of the integer 0. The NULL
macro is provided merely to help avoid confusion. The assignment

p = 0;

could bc assigning the value 0 to à numeric variable or assigning à null pointer to a
pointer variable; we can°t easily tell which. In contrast, the assignment

p = NULL;

makes it clear that p is a pointer.

In the header files that come with my compiler, NULL is defined as follows:
#define NULL (void *) O

What’s the advantage of casting O to void *?

This trick, which is allowed by the C standard, enables compilers to spot incorrect
uses of the null pointer. For example, suppose that we try to assign NULL Lo an
integer variable:

i = NULL;

IF NULL is defined as O, this assignment is perfectly legal. But if NULL is defined
as (void *) O, the compiler can warn us that we're assigning a pointer to an inte-
ger variable.

Defining NULL as (void *) O has a second, more important, advantage.
Suppose that we call a f'unction with a variable-leneth argument list and pass NULL
as one of the arguments. If NULL is defined as O. the compiler will incorrectly pass
à zero integer value. (In an ordinary function call, NULL works fine because the
compiler knows from the function’s prototype that it expects a pointer. When a
function has a variable-length areument list, however, the compiler lacks this
Knowledge.) Tf NULL is defined as (void *) O, the compiler will pass a null
pointer.

To make matters even more confusing, some header files define NULL to be
OL (the 1long version of 0). This definition, like the definition of NULL as O. is à
holdover from C’s earlier years, when pointers and integers were compatible. For
MOSL purposes, though, it really doesn’t matter how NULL is defined; just think of
it as a name for the null pointer.

Since O is used to represent the null pointer, I guess a null pointer is just an
address with all zero bits, right?
