656

Chapter 25

Table 25.10
Macros Defined in
<iso646.h>

253.4

International Features

and >, not the characters [ and ]. In contrast, the string "?? (??) " has length
two, because the compiler replaces the trigraph ? ? ( by the character [ and the tri-
graph ??) by the character ] .

Digraphs are more limited than trigraphs. First. as we’ve seen. digraphs are of
no use Inside a string literal or character constant; trigraphs are still needed in these
situations. Second, digraphs don*t solve the problem of providing alternate repre-
sentations for the characters \, *. |, and —. The <iso646 .h> header, described
next, helps with this problem.

The <iso646 .h> Header: Alternative Spellings

The <iso646.h> header is quite simple. Tt contains nothing but the definitions
of the eleven macros shown in Table 25.10. Each macro represents a C operator
that contains one of the characters & | —. !. or *. making it possible to use the
operators listed in the table even when these characters are absent from the key-
board.

 

 

 

 

WMacro Value
and &E&
and eq &=
bitand &
bitor |
compl -
not !
not eq =
or |
or eq |=
xor ,
xor _ eg — *=

 

 

The name of the header comes from ISO/IEC 646, an older standard for an
ASCIT-like character set. This standard allows for “national variants.” in which
countries substitute local characters for certain ASCII characters. thereby causing
the problem that digraphs and the <iso646 .h> header are trying to solve.

Universal Character Names (C99)

Section 25.2 discussed the Universal Character Set (UCS), which is closely related
to Unicode. C99 provides a special feature, wniversal character names, that allows
us to use UCS characters in the source code of a program.

À universal character name resembles an escape sequence. However, unlike
ordinary escape sequences, which can appear only in character constants and string
literals. universal character names may also be used in identifiers. This feature
allows programmers to use their native languages when defining names for vari-
ables, functions, and the like.
