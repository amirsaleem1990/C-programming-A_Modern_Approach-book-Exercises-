558

Chapter 22

iscanf
scanf

Input/Ouiput

[In the past, we've assumed that the minimum field width and precision were
constants embedded 1n the format string. Putting the * character where either num-
ber would normally go allows us to specify it as an argument afrer the format
string. For example. the following calls of print£ all produce the same output:

print£f("%6.4d", i);

printf£f("=*.4d", 6, i);
printf("%6.*d", 4, i);
print£("%*.+d", 6, 4, i);

Notice that the values to be filled in for the * come just before the value to be dis-
played. À major advantage of *, by the way. is that it allows us to use à macro to
specify the width or precision:

print£("%*d", WIDTH, i);
We can even compute the width or precision during program execution:
print£("%*d", page width / num cols, i);

The most unusual specifications are %p and $n. The %p conversion allows us
to print the value of a pointer:

print£("*p", (void *) ptr); /* displays value of ptr */

Although p 1s occasionally useful during debugging, it’s not a feature that most
programmers use on a daily basis. The C standard doesn’t specify what a pointer
looks like when printed using %p, but it’s likely to be shown as an octal or hexa-
decimal number.

The %n conversion 1s used to find out how many characters have been printed
so far by à call of .printE£. For example, after the call

print£("%d%n\n", 123, &len}) ;

the value of 1en will be 3, since print£ had written 3 characters (123) by the
time it reached %n. Notice that & must precede len (because %n requires a
pointer) and that 1en itself isn°t printed.

The …scanf Functions

int Escanf (FILE * restrict stream,
const char * restrict format, ...);
int scanf (const char * restrict format, ...);

Éscan£ and scan£ read data items from an input stream, using a format string to
indicate the layout of the input. After the format string. any number of pointers—
euach pointing to an object—follow as additional arguments. Input items are con-
verled (according to conversion specifications in the format string) and stored in
thesc objects.
