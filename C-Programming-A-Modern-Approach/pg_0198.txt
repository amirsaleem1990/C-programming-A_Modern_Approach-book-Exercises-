deal.c

82  Multidimensional Arrays 173

that has four rows (one for each suit) and 13 columns (one for each rank). In other
words, each element in the array corresponds to one of the 52 cards in the deck. AIl
elements of the array will be failse to start with. Each time we pick a card at ran-
dom, we’ll check whether the element of in_ hand corresponding to that card 1s
true or false. If it’s true, we’ll have to pick another card. If it’s false, we’ll store
true in that card's array element to remind us later that this card has already been
picked.

Once we've verified that a card is ‘“new’—not already selected—we'1l need to
translate its numerical rank and suit into characters and then display the card. To
translate the rank and suit to character form, we'll set up two arrays of charac-
ters—one for the rank and one for the suit—and then use the numbers to subscript
the arrays. These arrays won't change during program execution, so we may as
well declare them to be const.

>

 

/* Deals a random hand of cards */

#include <stdbool .h> /* C99 only */
#include <stdio.h>

#include <stdlib.h>

#finclude <time.h>

#define NUM SUITS 4
#define NUM RANKS 13

int main (void)
{
bool in hand [NUM SUITS] [NUM RANKS] = {false};
int num cards, rank, suit;
const char rank code[] = {'2','3','4','5','6','7','8',
l9llltl'ljl'lql'lkl’lal};
const char suit code[] = {'c','d','h','s'};

srand ( (unsigned) time (NULL) ) ;

printf ("Enter number of cards in hand: ") ;
scanf ("3d", &num _ cards) ;

print£ ("Your hand:") ;
while (num cards > O) {

suit = rand() % NUM SUITS; /* picks a random suit */
rank = rand() % NUM RANKS; /* picks a random rank */
i£ (!in hand[suit] [rank]) {

in_hand [suit] [rank] = true;

num_cards--;

©

printf(" %c%c", rank code [rank], suit code [suit]) ;

}
}

print£("\n") ;

return 0;
