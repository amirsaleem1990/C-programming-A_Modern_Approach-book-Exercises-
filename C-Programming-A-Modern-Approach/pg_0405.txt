 

380

Chapter 16

Structures, Unions, and Enumerations

The values in the initializer must appear in the same order as the members of the
structure. In our example, the number member of part1 will be 528, the name
member will be "Disk drive*". and so on. Here’s how part1 will look after
initälization:

number 528

 

 

name Daisk drive

—

on _ hand 10

 

Structure initializers follow rules similar to those for array initializers. Expres-
sions used in a structure initializer must be constant: for example. we couldn’t have
used a variable to initialize partl's on hand member. (This restriction is re-
laxed in C99., as we’I1 scc in Section 18.5.) An initializer can have fewer members
than the structure it's initializing: as with atays, any “leftover” members are given
O as their initial value. In particular, the bytes in a leftover character array will be
zero, making it represent the emply string.

Designated Initializers

C99's designated initializers, which were discussed in Section 8.1 in the context of
arrays, can also be used with structures. Consider the initializer for part1 shown
in the previous example:

{528, "Disk drive", 10}

À designated initializer would look similar, but with each value labeled by the
name of the member that it initializes:

{.number = 528, .name = "Disk drive", .on_hand = 10}

The combination of the pertod and the member name is called à designator. (Des-
ignators for array elements have à different form.)

Designated initializers have several advantages. For one, they're easier to read
and check for correctness. because the reader can clearly see the correspondence
between the members of the structure and the values listed in the initializer.
Another is that the values in the initializer don’t have to be placed in the same
order that the members are listed in the structure. Our example imitializer could be
written as follows:

{.on hand = 10, .name = "Disk drive", .number = 528}

Since the order doesn't matter. the programmer doesn’t have to remember the
order in which the members were originally declared. Morcover. the order of
the members can be changed in the future without affecting designated initializ-
ers.
