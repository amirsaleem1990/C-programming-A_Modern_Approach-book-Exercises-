 

 

Section 13.4

toupper function »23.5

Section 13.5

S.

® 6.
T.
©
0.

|l

12.

Exercises 309

(c) Have it stop reading at the first new-line character. then store the new-line character in
the string.
(d) Have it leave behind characters that it doesn t have room lo store.

(a) Write a function named capitalize that capitalizes all letters in its argument. The
argument will be a null-terminated string containing arbitrary characters. not just letters.
Use array subscripting to access the characters in the string. Hinz: Use the toupper func-
tion to convert each character to upper-case.

(b) Rewrite the capitalize function, this time using pointer arithmetic to access the
characters in the string.

Write a function named censor that modifies a string by replacing every occurrence of
foo by xxx. For example, the string "food £oo1" would become "xxxd xxx1 ". Make
the function as short as possible without sacrificing clarity.

Suppose that str is an array of characters. Which one of the l'ollowing statements is not
equivalent to the other three?

(a) *str = 0;

(b) str[0] = '\O';
(c) stroepy(str, "") ;
(d) strcat(str, "") ;

What will be the value of the strine str after the following statements have been executed?

strcpy(str, "tire-bouchon") ;
stropy(&str[4], "d-or-wi") ;
strcat (str, "red?") ;

What will be the value of the string s1 after the following statements have been executed?

stropy(s1, "computer") ;

strecpy(s2, "science") ;

if (stromp(s1, s2) < O)
strcat(s1, s2);

else
strcat (s2, s1l);
sl (strlen(s1)-6] = '\0';

The following function supposedly creates an identical copy of à string. What's wrong with
the function?

char *duplicate (const char *p)

{

char *q;

strepy(q, Pp) ;
return q;

}

The Q&A section at the end of this chapter shows how the stremp function might be writ-
ten using array subscripting. Modify the function to use pointer arithmetic instead.

Write the following function:

void get extension (const char *file name, char *extension) ;
