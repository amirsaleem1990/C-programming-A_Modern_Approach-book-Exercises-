Section 20.3

*15.

16.

Programming Projects 527

(a) Assume that the variable s has been declared as follows:

struct |
int flag: 1;
} Si

With some compilers, executing the following statements causes 1 to be displayed, but with
other compilers, the output is —1. Explain the reason for this behavior.

s.flag = 1;
print£ ("%d\n"', s.flag) ;

(b) How can this problem be avoided?

Starting with the 386 processor, x86 CPUs have 32-bit registers named EAX. EBX, ECX,
and EDX. The second half (the least significant bits) of these registers is the same as AX,
BX, CX, and DX, respectively. Modify the regs union so that it includes these registers as
well as the older ones. Your union should be set up so that modifying EAX changes AX and
modifying AX changes the second half of EAX. (The other new registers will work in à sim-
ilar fashion.) You’1l nceed to add some “dummy” members to the word and byte siructures,
corresponding to the other half of EAX, EBX, ECX. and EDX. Declare the type of the new
registers to be DWORD (double word), which should be defined as unsigned long. Don'!
forget that the x86 architecture is little-endian.

Programming Projects

Design a union that makes it possible to view a 32-bit value as cither a £loat or the struc-
ture described in Exercise 14. Write a program that stores | in the structure’s sign field, 128
in the exponent field, and O in the fraction field, then prints the float value stored in the
union. (The answer should be —2.0 if you’ve set up the bit-fields correctly.)
