Chapter 1 Introducing C

Q:
À:

 

Where did 1int get its name?

Unlike the names of many other UNIX Lools, 1lint isn’t an acronym: it got its
name from the way it picks up pieces of “fluff” from a program.

>.

 

Z

Is there some way to force a compiler to do a more thorough job of error-
checking, without having to use lint?

A: Yes. Most compilers will do a more thorough check of à program if asked to. In
addition to checking for errors (undisputed violations of the rules of C), most com-
pilers also produce warning messages, Indicating potential trouble spots. Some
compilers have more than one ‘’‘warning level”; selecting a higher level causes the
compiler to check for more problems than choosing a lower level. If your compiler
supports warning levels, it’s a good idca to select the highest level, causing the
compiler to perform the most thorough job of checking that it’s capable of. Error-

acc»a1 checking options for the GCC compiler, which is distributed with Linux, are dis-
cussed in the Q&A section at the end of Chapter 2.

*Q:  Pm interested in making my program as reliable as possible. Are there any
other tools available besides 1int and debuggers?

A: Yes. Other common tools include ‘‘bounds-checkers” and “leak-finders.” C doesn’t
require that array subscripts be checked; a bounds-checker adds this capability. À
leak-finder helps locate ‘“memory leaks”: blocks of memory that are dynamically
allocated but never deallocated.

 

*Starred questions cover material too advanced or too esoteric to interest the average reader, and often
rcfer to topics covered in later chapters. Curious readers with a fair bit of programming experience may
wish to delve into these questions immediately; others should definitely skip them on a first reading.
