494

Chapter 19  Program Design

stacKclient.c

generally doesn’t need these functions, but an ADT does. create will dynami-
cally allocate memory for a stack (including the memory required for a
stack_type structure), as well as initializing the stack to its “empty” state.
destroy will release the stack’s dynamically allocated memory.

The following client file can be used to test the stack ADT. It creates two
stacks and performs a variety of operations on them.

#include <stdio.hs>
#include "stackADT.h"

int main (void)
Stack s1l, s2;
int n;

sl = create();
s2 = create();

push(s1i, 1);
push(s1, 2);

n = pop(s1);
print£f ("Popped %d £rom sl\n", n);
push(s2, n) ;
n = pop(si);
print£ ("Popped %$d from si\n", n) ;
push(s2, n) ;

destroy (s1) ;

while (!is empty(s2))
print£ ("Popped %$d from s2\n", pop(s2));

push(s2, 3);
make _empty (s2) ;
if (is empty(s2))
printf("s2 is empty\n") ;
else
printf ("s2 is not empty\n") ;

destroy (s2) ;

return 0;

}

If the stack ADT is implemented correctly. the program should produce the follow-
ing output:

Popped 2 from sl
Popped 1 f£from sl
Popped 1 from s2
Popped 2 £rom s2
s2 is empty
