540

Chapter 22

æ

<wchar .h> header >25.5

221

Input/Output

111 postpone it until Section 24.2, which discusses that header. Section 26.1 covers
the remaining functions (vÉprint£. vprint£, vsprint£f. vsnprintË,
vÉfscan£, vscan£f, and vsscan£f). Thesc functions rely on the va_list type,
which 1s introduced in that section.

In C89, all standard input/output functions belong to <stdio.h>. but such is
not the case in C99, where some 1/O functions are declared in the <wchar .h>
header. The <wchar .h> functions deal with wide characters rather than ordinary
characters; the good news 1s that most of these functions closely resemble those of
<stdio.h>. Functions in <stdio.h> that read or write data are known as byte
input/output functions; similar functions in <wchar .h> are called wide-charac-
ter input/output functions.

Streams

In Ç, the term sfream means any source of input or any destination for output.
Many small programs, like the ones in previous chapters, obtain all their input
from one stream (usually associated with the keyboard) and write all their output to
another stream (usually associated with the screen).

Larger programs may need additional streams. These streams often represent
files stored on various media (such as hard drives, CDs, DVDs, and flash memory).
but they could just as easily be associated with devices that don’t store files: net-
work ports. printers, and the like. We'Il concentrate on files, since they*re common
and easy to understand. (l may even occasionally use the term /i/e when I should
say stream.) Keep in mind, however, that many of the functions in <stdio.h>
work equally well with all streams, not just the ones that represent files.

File Pointers

Accessing a stream in a C program is done through a fîle pointer, which has type
FILE * (the FILE type 1s declared in <stdio.h>). Certain streams are repre-
sented by file pointers with standard names; we can declare additional file pointers
as needed. For example, if a program needs two streams in addition to the standard
ones, it might contain the following declaration:

FILE *fp1, *fp2;

À program may declare any number of FILE * variables, although operating sys-
tems usually limit the number of streams that can be open at one time.

Standard Streams and Redirection

<stdio.h> provides thrce standard streams (Table 22.1). These streams arc
ready to use—we don’t declare them. and we don’t open or close them.
